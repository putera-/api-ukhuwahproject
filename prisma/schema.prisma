// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Client {
  id        String   @id @default(uuid())
  name      String   @db.VarChar(100)
  nick      String   @db.VarChar(20)
  slogan    String?  @db.VarChar(255)
  address   String?  @db.Text
  phone     String?  @db.VarChar(20)
  logo      String?  @db.VarChar(100)
  youtube   String?  @db.VarChar(100)
  instagram String?  @db.VarChar(100)
  facebook  String?  @db.VarChar(100)
  twitter   String?  @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique @db.VarChar(100)
  name      String    @db.VarChar(100)
  password  String    @db.VarChar(100)
  auth      Auth[]
  articles  Article[]
  role      UserRole  @default(MEMBER)
  avatar    String?   @db.VarChar(255)
  avatar_md String?   @db.VarChar(255)
  active    Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  Itikaf    Itikaf[]
}

enum UserRole {
  SUPERUSER
  ADMIN
  STAFF
  MEMBER
}

model Auth {
  id        String   @id @default(uuid())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String
  token     String   @db.VarChar(300)
  expiredAt DateTime @db.Timestamp()
  path      String   @db.VarChar(255)
  method    String   @db.VarChar(10)
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Article {
  id          String        @id @default(uuid())
  title       String        @db.VarChar(100)
  content     String        @db.Text
  author      User          @relation(fields: [authorId], references: [id])
  authorId    String
  photos      Photo[]
  status      ArticleStatus @default(DRAFT)
  deleted     Boolean       @default(false)
  publishedAt DateTime      @default(now())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now()) @updatedAt

  @@index([title])
}

enum ArticleStatus {
  DRAFT
  PUBLISH
}

model Photo {
  id               String          @id @default(uuid())
  path             String          @db.VarChar(255)
  path_md          String          @db.VarChar(255)
  index            Int             @default(0) @db.Int
  article          Article?        @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId        String?
  Itikaf           Itikaf?         @relation(fields: [itikafId], references: [id], onDelete: Cascade)
  itikafId         String?
  ItikafSchedule   ItikafSchedule? @relation(fields: [itikafScheduleId], references: [id], onDelete: Cascade)
  itikafScheduleId String?
}

model Itikaf {
  id                   String           @id @default(uuid())
  year                 String           @db.VarChar(4)
  hijri_year           String           @unique() @db.VarChar(4)
  description          String           @db.Text
  photos               Photo[]
  contact_person_name  String?          @db.VarChar(100)
  contact_person_phone String?          @db.VarChar(20)
  createdBy            User             @relation(fields: [userId], references: [id])
  userId               String
  active               Boolean          @default(false)
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @default(now()) @updatedAt
  ItikafSchedule       ItikafSchedule[]
}

model ItikafSchedule {
  id          String   @id @default(uuid())
  itikaf      Itikaf   @relation(fields: [itikafId], references: [id])
  itikafId    String
  date        String   @db.VarChar(10)
  day_index   Int      @db.TinyInt
  description String   @db.Text
  photos      Photo[]
  deleted     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

// TODO relation with asatidz, imama magribh, imam isya, tausiyah, imam qiyamul lail
